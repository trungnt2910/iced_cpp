// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors

#pragma once

#include "Code.g.h"

namespace Iced::Intel
{
	class CodeExtensions final
	{
	public:
		static constexpr bool IgnoresSegment(Code code);
		static constexpr bool IgnoresIndex(Code code);
		static constexpr bool IsTileStrideIndex(Code code);
	};
}

namespace Iced::Intel
{
	bool constexpr CodeExtensions::IgnoresSegment(Code code)
	{
		switch (code)
		{
			// GENERATOR-BEGIN: IgnoresSegmentTable
			// ⚠️This was generated by GENERATOR!🦹‍♂️
		case Code::Lea_r16_m:
		case Code::Lea_r32_m:
		case Code::Lea_r64_m:
		case Code::Bndcl_bnd_rm32:
		case Code::Bndcl_bnd_rm64:
		case Code::Bndcu_bnd_rm32:
		case Code::Bndcu_bnd_rm64:
		case Code::Bndmk_bnd_m32:
		case Code::Bndmk_bnd_m64:
		case Code::Bndcn_bnd_rm32:
		case Code::Bndcn_bnd_rm64:
			return true;
			// GENERATOR-END: IgnoresSegmentTable
		default:
			return false;
		}
	}

	bool constexpr CodeExtensions::IgnoresIndex(Code code)
	{
		switch (code)
		{
			// GENERATOR-BEGIN: IgnoresIndexTable
			// ⚠️This was generated by GENERATOR!🦹‍♂️
		case Code::Bndldx_bnd_mib:
		case Code::Bndstx_mib_bnd:
			return true;
			// GENERATOR-END: IgnoresIndexTable
		default:
			return false;
		}
	}

	bool constexpr CodeExtensions::IsTileStrideIndex(Code code)
	{
		switch (code)
		{
			// GENERATOR-BEGIN: TileStrideIndexTable
			// ⚠️This was generated by GENERATOR!🦹‍♂️
		case Code::VEX_Tileloaddt1_tmm_sibmem:
		case Code::VEX_Tilestored_sibmem_tmm:
		case Code::VEX_Tileloadd_tmm_sibmem:
			return true;
			// GENERATOR-END: TileStrideIndexTable
		default:
			return false;
		}
	}
}
