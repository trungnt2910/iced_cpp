/* 
SPDX-License-Identifier: MIT
Copyright (C) 2018-present iced project and contributors
 */

// ‚ö†Ô∏èThis file was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è

#pragma once

#if defined(FAST_FMT)
#include <array>
#include <cstdint>
#include <stdexcept>
#include <string>
#include "../ToString.h"
#include "../Internal/StringHelpers.h"
namespace Iced::Intel::FastFormatterInternal {
	enum class FastFmtFlags : std::uint8_t {
		None  = 0x00000000,
		HasVPrefix  = 0x00000001,
		SameAsPrev  = 0x00000002,
		ForceMemSize  = 0x00000004,
		PseudoOpsKindShift  = 0x00000003,
		cmpps  = 0x00000008,
		vcmpps  = 0x00000010,
		cmppd  = 0x00000018,
		vcmppd  = 0x00000020,
		cmpss  = 0x00000028,
		vcmpss  = 0x00000030,
		cmpsd  = 0x00000038,
		vcmpsd  = 0x00000040,
		pclmulqdq  = 0x00000048,
		vpclmulqdq  = 0x00000050,
		vpcomb  = 0x00000058,
		vpcomw  = 0x00000060,
		vpcomd  = 0x00000068,
		vpcomq  = 0x00000070,
		vpcomub  = 0x00000078,
		vpcomuw  = 0x00000080,
		vpcomud  = 0x00000088,
		vpcomuq  = 0x00000090,
		vpcmpb  = 0x00000098,
		vpcmpw  = 0x000000A0,
		vpcmpd  = 0x000000A8,
		vpcmpq  = 0x000000B0,
		vpcmpub  = 0x000000B8,
		vpcmpuw  = 0x000000C0,
		vpcmpud  = 0x000000C8,
		vpcmpuq  = 0x000000D0,
		vcmpph  = 0x000000D8,
		vcmpsh  = 0x000000E0,
		vcmpps8  = 0x000000E8,
		vcmppd8  = 0x000000F0,
		vpcmpd6  = 0x000000F8,
	};
	constexpr FastFmtFlags& operator^=(FastFmtFlags& a, const FastFmtFlags& b) { return a = (FastFmtFlags)((std::uint8_t)a ^ (std::uint8_t)b); }
	constexpr FastFmtFlags operator^(const FastFmtFlags& a, const FastFmtFlags& b) { return (FastFmtFlags)((std::uint8_t)a ^ (std::uint8_t)b); }
	constexpr FastFmtFlags& operator|=(FastFmtFlags& a, const FastFmtFlags& b) { return a = (FastFmtFlags)((std::uint8_t)a | (std::uint8_t)b); }
	constexpr FastFmtFlags operator|(const FastFmtFlags& a, const FastFmtFlags& b) { return (FastFmtFlags)((std::uint8_t)a | (std::uint8_t)b); }
	constexpr FastFmtFlags& operator&=(FastFmtFlags& a, const FastFmtFlags& b) { return a = (FastFmtFlags)((std::uint8_t)a & (std::uint8_t)b); }
	constexpr FastFmtFlags operator&(const FastFmtFlags& a, const FastFmtFlags& b) { return (FastFmtFlags)((std::uint8_t)a & (std::uint8_t)b); }
	constexpr FastFmtFlags operator~(const FastFmtFlags& a) { return (FastFmtFlags)(~((std::uint8_t)a)); }
	constexpr std::uint8_t operator+(const FastFmtFlags& a, const FastFmtFlags& b) { return ((std::uint8_t)a + (std::uint8_t)b); }
	constexpr std::uint8_t operator+(const FastFmtFlags& a, const std::uint8_t& b) { return ((std::uint8_t)a + b); }
	constexpr std::uint8_t operator+(const std::uint8_t& a, const FastFmtFlags& b) { return (a + (std::uint8_t)b); }
	constexpr std::uint8_t operator-(const FastFmtFlags& a, const FastFmtFlags& b) { return ((std::uint8_t)a - (std::uint8_t)b); }
	constexpr std::uint8_t operator-(const FastFmtFlags& a, const std::uint8_t& b) { return ((std::uint8_t)a - b); }
	constexpr std::uint8_t operator-(const std::uint8_t& a, const FastFmtFlags& b) { return (a - (std::uint8_t)b); }
	constexpr FastFmtFlags operator++(FastFmtFlags& a, int) { auto temp = a; a = FastFmtFlags(a + 1); return temp; }
	constexpr FastFmtFlags& operator++(FastFmtFlags& a) { return a = FastFmtFlags(a + 1); }
	constexpr FastFmtFlags operator--(FastFmtFlags& a, int) { auto temp = a; a = FastFmtFlags(a - 1); return temp; }
	constexpr FastFmtFlags& operator--(FastFmtFlags& a) { return a = FastFmtFlags(a - 1); }
	constexpr bool operator==(const FastFmtFlags& a, const std::uint8_t& b) { return ((std::uint8_t)a == b); }
	constexpr bool operator==(const std::uint8_t& a, const FastFmtFlags& b) { return (a == (std::uint8_t)b); }
	constexpr bool operator>=(const FastFmtFlags& a, const std::uint8_t& b) { return ((std::uint8_t)a >= b); }
	constexpr bool operator>=(const std::uint8_t& a, const FastFmtFlags& b) { return (a >= (std::uint8_t)b); }
	constexpr bool operator<=(const FastFmtFlags& a, const std::uint8_t& b) { return ((std::uint8_t)a <= b); }
	constexpr bool operator<=(const std::uint8_t& a, const FastFmtFlags& b) { return (a <= (std::uint8_t)b); }
	constexpr bool operator>(const FastFmtFlags& a, const std::uint8_t& b) { return ((std::uint8_t)a > b); }
	constexpr bool operator>(const std::uint8_t& a, const FastFmtFlags& b) { return (a > (std::uint8_t)b); }
	constexpr bool operator<(const FastFmtFlags& a, const std::uint8_t& b) { return ((std::uint8_t)a < b); }
	constexpr bool operator<(const std::uint8_t& a, const FastFmtFlags& b) { return (a < (std::uint8_t)b); }
	constexpr bool operator!=(const FastFmtFlags& a, const std::uint8_t& b) { return ((std::uint8_t)a != b); }
	constexpr bool operator!=(const std::uint8_t& a, const FastFmtFlags& b) { return (a != (std::uint8_t)b); }
}
template <>
constexpr std::string Iced::Intel::ToString(const Iced::Intel::FastFormatterInternal::FastFmtFlags& e) {
	std::string result;
	auto temp = e;
	if (temp == Iced::Intel::FastFormatterInternal::FastFmtFlags::None) {
		return "None";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpd6) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpd6) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpd6;
		result += "vpcmpd6, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomub) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomub) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomub;
		result += "vpcomub, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpub) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpub) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpub;
		result += "vpcmpub, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpph) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpph) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpph;
		result += "vcmpph, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpps8) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpps8) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpps8;
		result += "vcmpps8, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmppd8) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmppd8) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmppd8;
		result += "vcmppd8, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::cmpsd) == Iced::Intel::FastFormatterInternal::FastFmtFlags::cmpsd) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::cmpsd;
		result += "cmpsd, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomb) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomb) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomb;
		result += "vpcomb, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomd) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomd) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomd;
		result += "vpcomd, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomq) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomq) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomq;
		result += "vpcomq, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpb) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpb) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpb;
		result += "vpcmpb, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpd) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpd) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpd;
		result += "vpcmpd, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpq) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpq) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpq;
		result += "vpcmpq, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpud) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpud) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpud;
		result += "vpcmpud, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpuq) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpuq) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpuq;
		result += "vpcmpuq, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpsh) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpsh) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpsh;
		result += "vcmpsh, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::PseudoOpsKindShift) == Iced::Intel::FastFormatterInternal::FastFmtFlags::PseudoOpsKindShift) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::PseudoOpsKindShift;
		result += "PseudoOpsKindShift, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::cmppd) == Iced::Intel::FastFormatterInternal::FastFmtFlags::cmppd) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::cmppd;
		result += "cmppd, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::cmpss) == Iced::Intel::FastFormatterInternal::FastFmtFlags::cmpss) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::cmpss;
		result += "cmpss, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpss) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpss) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpss;
		result += "vcmpss, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::pclmulqdq) == Iced::Intel::FastFormatterInternal::FastFmtFlags::pclmulqdq) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::pclmulqdq;
		result += "pclmulqdq, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpclmulqdq) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpclmulqdq) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpclmulqdq;
		result += "vpclmulqdq, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomw) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomw) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomw;
		result += "vpcomw, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomud) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomud) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomud;
		result += "vpcomud, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomuq) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomuq) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomuq;
		result += "vpcomuq, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpw) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpw) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpw;
		result += "vpcmpw, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpuw) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpuw) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcmpuw;
		result += "vpcmpuw, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::HasVPrefix) == Iced::Intel::FastFormatterInternal::FastFmtFlags::HasVPrefix) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::HasVPrefix;
		result += "HasVPrefix, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::SameAsPrev) == Iced::Intel::FastFormatterInternal::FastFmtFlags::SameAsPrev) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::SameAsPrev;
		result += "SameAsPrev, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::ForceMemSize) == Iced::Intel::FastFormatterInternal::FastFmtFlags::ForceMemSize) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::ForceMemSize;
		result += "ForceMemSize, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::cmpps) == Iced::Intel::FastFormatterInternal::FastFmtFlags::cmpps) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::cmpps;
		result += "cmpps, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpps) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpps) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpps;
		result += "vcmpps, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmppd) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmppd) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmppd;
		result += "vcmppd, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpsd) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpsd) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vcmpsd;
		result += "vcmpsd, ";
	}
	if ((temp & Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomuw) == Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomuw) {
		temp ^= Iced::Intel::FastFormatterInternal::FastFmtFlags::vpcomuw;
		result += "vpcomuw, ";
	}
	if (temp != 0 || result.empty()) return Internal::StringHelpers::ToDec((std::uint8_t)e);
	return result.substr(0, result.size() - 2);
}
#endif
