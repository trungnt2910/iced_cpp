// C# helper headers
#include <csharp/classes.h>
#include <csharp/enum.h>
#include <csharp/interfaces.h>
#include <csharp/primitives.h>

// Commonly used headers
#include <cstdint>
#include <format>
#include <functional>
#include <memory>
#include <stdexcept>
#include <string>
#include <vector>

#pragma once

// Code generated from Iced. Do not edit.
// Commit tag: badb6147c0994a4954fa27645aba2b02c2bb9502.
// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors
// ‚ö†Ô∏èThis file was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
namespace Iced::Intel
{
	/// <summary>Decoder error</summary>
	enum class DecoderError
	{
		/// <summary>No error. The last decoded instruction is a valid instruction</summary>
		None = 0,
		/// <summary>It&apos;s an invalid instruction or an invalid encoding of an existing instruction (eg. some reserved bit is set/cleared)</summary>
		InvalidInstruction = 1,
		/// <summary>There&apos;s not enough bytes left to decode the instruction</summary>
		NoMoreBytes = 2
	};

	DEFINE_COMP(DecoderError)
		DEFINE_ARITH(DecoderError)

}
