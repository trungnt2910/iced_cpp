// C# helper headers
#include <csharp/classes.h>
#include <csharp/enum.h>
#include <csharp/interfaces.h>
#include <csharp/primitives.h>

// Commonly used headers
#include <cstdint>
#include <format>
#include <functional>
#include <memory>
#include <stdexcept>
#include <string>
#include <vector>

#pragma once

#include "Code.g.h"
#include "Register.g.h"
#include "MemorySize.g.h"

// Code generated from Iced. Do not edit.
// Commit tag: badb6147c0994a4954fa27645aba2b02c2bb9502.
// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors
// ‚ö†Ô∏èThis file was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
namespace Iced::Intel
{
	class IcedConstants final
	{
	public:
		//C# TO C++ CONVERTER NOTE: The following .NET attribute has no direct equivalent in C++:
		//ORIGINAL LINE: [MethodImpl(MethodImplOptions.AggressiveInlining)] public static bool IsMvex(Code code)
		constexpr static bool IsMvex(Code code)
		{
			return (static_cast<std::uint32_t>(code) - MvexStart) < MvexLength;
		}

		static constexpr std::int32_t MaxOpCount = 5;
		static constexpr std::int32_t MaxInstructionLength = 15;
		static constexpr std::int32_t RegisterBits = 8;
		static constexpr Register VMM_first = Register::ZMM0;
		static constexpr Register VMM_last = Register::ZMM31;
		static constexpr std::int32_t VMM_count = 32;
		static constexpr Register XMM_last = Register::XMM31;
		static constexpr Register YMM_last = Register::YMM31;
		static constexpr Register ZMM_last = Register::ZMM31;
		static constexpr Register TMM_last = Register::TMM7;
		static constexpr std::int32_t MaxCpuidFeatureInternalValues = 182;
		static constexpr MemorySize FirstBroadcastMemorySize = MemorySize::Broadcast32_Float16;
		static constexpr std::uint32_t MvexStart = 4611;
		static constexpr std::uint32_t MvexLength = 207;
		static constexpr std::int32_t CC_a_EnumCount = 2;
		static constexpr std::int32_t CC_ae_EnumCount = 3;
		static constexpr std::int32_t CC_b_EnumCount = 3;
		static constexpr std::int32_t CC_be_EnumCount = 2;
		static constexpr std::int32_t CC_e_EnumCount = 2;
		static constexpr std::int32_t CC_g_EnumCount = 2;
		static constexpr std::int32_t CC_ge_EnumCount = 2;
		static constexpr std::int32_t CC_l_EnumCount = 2;
		static constexpr std::int32_t CC_le_EnumCount = 2;
		static constexpr std::int32_t CC_ne_EnumCount = 2;
		static constexpr std::int32_t CC_np_EnumCount = 2;
		static constexpr std::int32_t CC_p_EnumCount = 2;
		static constexpr std::int32_t CodeEnumCount = 4818;
		static constexpr std::int32_t CodeSizeEnumCount = 4;
		static constexpr std::int32_t ConditionCodeEnumCount = 17;
		static constexpr std::int32_t CpuidFeatureEnumCount = 161;
		static constexpr std::int32_t DecoderErrorEnumCount = 3;
		static constexpr std::int32_t DecoratorKindEnumCount = 6;
		static constexpr std::int32_t EncodingKindEnumCount = 6;
		static constexpr std::int32_t FlowControlEnumCount = 10;
		static constexpr std::int32_t FormatterSyntaxEnumCount = 4;
		static constexpr std::int32_t FormatterTextKindEnumCount = 16;
		static constexpr std::int32_t MandatoryPrefixEnumCount = 5;
		static constexpr std::int32_t MemorySizeEnumCount = 160;
		static constexpr std::int32_t MemorySizeOptionsEnumCount = 4;
		static constexpr std::int32_t MnemonicEnumCount = 1834;
		static constexpr std::int32_t MvexConvFnEnumCount = 13;
		static constexpr std::int32_t MvexEHBitEnumCount = 3;
		static constexpr std::int32_t MvexRegMemConvEnumCount = 17;
		static constexpr std::int32_t MvexTupleTypeLutKindEnumCount = 14;
		static constexpr std::int32_t NumberBaseEnumCount = 4;
		static constexpr std::int32_t NumberKindEnumCount = 8;
		static constexpr std::int32_t OpAccessEnumCount = 8;
		static constexpr std::int32_t OpCodeOperandKindEnumCount = 109;
		static constexpr std::int32_t OpCodeTableKindEnumCount = 9;
		static constexpr std::int32_t OpKindEnumCount = 25;
		static constexpr std::int32_t PrefixKindEnumCount = 18;
		static constexpr std::int32_t RegisterEnumCount = 256;
		static constexpr std::int32_t RelocKindEnumCount = 1;
		static constexpr std::int32_t RepPrefixKindEnumCount = 3;
		static constexpr std::int32_t RoundingControlEnumCount = 5;
		static constexpr std::int32_t TupleTypeEnumCount = 19;
	};
}
