// C# helper headers
#include <csharp/classes.h>
#include <csharp/enum.h>



// Commonly used headers
#include <cstdint>
#include <format>
#include <functional>
#include <memory>
#include <stdexcept>
#include <string>
#include <vector>

#include "CodeExtensions.h"

namespace Iced::Intel
{

	bool CodeExtensions::IgnoresSegment(Code code)
	{
		switch (code)
		{
			// GENERATOR-BEGIN: IgnoresSegmentTable
			// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
		case Code::Lea_r16_m:
		case Code::Lea_r32_m:
		case Code::Lea_r64_m:
		case Code::Bndcl_bnd_rm32:
		case Code::Bndcl_bnd_rm64:
		case Code::Bndcu_bnd_rm32:
		case Code::Bndcu_bnd_rm64:
		case Code::Bndmk_bnd_m32:
		case Code::Bndmk_bnd_m64:
		case Code::Bndcn_bnd_rm32:
		case Code::Bndcn_bnd_rm64:
			return true;
			// GENERATOR-END: IgnoresSegmentTable
		default:
			return false;
		}
	}

	bool CodeExtensions::IgnoresIndex(Code code)
	{
		switch (code)
		{
			// GENERATOR-BEGIN: IgnoresIndexTable
			// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
		case Code::Bndldx_bnd_mib:
		case Code::Bndstx_mib_bnd:
			return true;
			// GENERATOR-END: IgnoresIndexTable
		default:
			return false;
		}
	}

	bool CodeExtensions::IsTileStrideIndex(Code code)
	{
		switch (code)
		{
			// GENERATOR-BEGIN: TileStrideIndexTable
			// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
		case Code::VEX_Tileloaddt1_tmm_sibmem:
		case Code::VEX_Tilestored_sibmem_tmm:
		case Code::VEX_Tileloadd_tmm_sibmem:
			return true;
			// GENERATOR-END: TileStrideIndexTable
		default:
			return false;
		}
	}
}
